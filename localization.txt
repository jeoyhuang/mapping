To develop localization using LiDAR (Light Detection and Ranging) in a predefined environment using ROS 2 Galactic and Python, you can follow these general steps:

1. Set up the environment:
   - Install ROS 2 Galactic on your system.
   - Create a ROS 2 workspace.
   - Install the necessary packages for LiDAR and localization, such as `ros2_lidar` and `robot_localization`.

2. Connect the LiDAR sensor:
   - Connect your LiDAR sensor to your robot and ensure it is functioning properly.
   - Verify that the LiDAR data is being published correctly as a ROS 2 topic.

3. Create a LiDAR-based localization package:
   - In your ROS 2 workspace, create a new package using the following command:
     ```
     ros2 pkg create my_localization_pkg --build-type ament_python --dependencies rclpy sensor_msgs
     ```

4. Write the localization node:
   - Inside the `my_localization_pkg`, create a new Python file, such as `lidar_localization_node.py`.
   - Import the required modules:
     ```python
     import rclpy
     from rclpy.node import Node
     from sensor_msgs.msg import LaserScan
     ```

   - Create a class for your localization node and inherit from `rclpy.node.Node`:
     ```python
     class LidarLocalizationNode(Node):
         def __init__(self):
             super().__init__("lidar_localization_node")
             self.subscription = self.create_subscription(LaserScan, "lidar_topic", self.lidar_callback, 10)
             self.subscription  # prevent unused variable warning
             # Add any additional initialization code here

         def lidar_callback(self, msg):
             # Process the LiDAR data and perform localization algorithms
             # Publish the robot's pose or other relevant localization information
             pass
     ```

   - Implement the `lidar_callback` function to process the LiDAR data and perform localization algorithms.
   - Add any additional initialization code specific to your localization method.

5. Build and run the localization node:
   - In your ROS 2 workspace, build the package:
     ```
     colcon build --packages-select my_localization_pkg
     ```

   - Source the ROS 2 workspace:
     ```
     source install/setup.bash
     ```

   - Run the localization node:
     ```
     ros2 run my_localization_pkg lidar_localization_node
     ```

6. Test the localization:
   - In another terminal, verify that the LiDAR data is being received by the localization node:
     ```
     ros2 topic echo lidar_topic
     ```

   - Observe the output of the localization node, which should contain the localization information you have implemented.

Note that this is a basic outline for developing a LiDAR-based localization system. 
Depending on your specific requirements and the algorithms you plan to use, you may 
need to modify and expand upon these steps. Additionally, you may need to configure 
the LiDAR sensor parameters, perform data processing, implement filtering techniques, 
and integrate with other sensor data or localization libraries.